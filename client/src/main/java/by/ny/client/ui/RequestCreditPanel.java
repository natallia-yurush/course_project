/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package by.ny.client.ui;

import by.ny.client.ConnectionUtil;
import by.ny.client.CurrentUserUtil;
import by.ny.server.entity.command.usercredit.RequestUserCreditCommand;
import by.ny.server.entity.result.usercredit.RequestUserCreditResult;
import by.ny.server.entity.Credit;
import by.ny.server.entity.command.credit.ListCreditsCommand;
import by.ny.server.entity.result.credit.CreditsResult;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Natallia Yurush
 */
public class RequestCreditPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestCreditPanel
     */
    public RequestCreditPanel() {
        initComponents();
        try {
            Socket socket = ConnectionUtil.getSocket();
            
            ObjectOutputStream outputStream = new ObjectOutputStream(socket.getOutputStream());
            outputStream.writeObject(new ListCreditsCommand());
            
            ObjectInputStream inputStream = new ObjectInputStream(socket.getInputStream());
            CreditsResult result = (CreditsResult) inputStream.readObject();
            creditsComboBox.setModel(new DefaultComboBoxModel<>(result.getCredits().toArray(new Credit[] {})));
            creditsComboBox.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Credit selectedCredit = (Credit) creditsComboBox.getSelectedItem();
                    ((SpinnerNumberModel) requestedAmountSpinner.getModel()).setMaximum(selectedCredit.getMaxAmount());
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestCreditButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        creditsComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        requestedAmountSpinner = new javax.swing.JSpinner();

        requestCreditButton.setText("Оформить заявку");
        requestCreditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestCreditButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Кредит:");

        jLabel2.setText("Запрашиваемая сумма:");

        requestedAmountSpinner.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 0.1d));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestCreditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(111, 111, 111)
                        .addComponent(creditsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(requestedAmountSpinner)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(creditsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(requestedAmountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 327, Short.MAX_VALUE)
                .addComponent(requestCreditButton)
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestCreditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestCreditButtonActionPerformed
        try {
            Socket socket = ConnectionUtil.getSocket();
            
            ObjectOutputStream outputStream = new ObjectOutputStream(socket.getOutputStream());
            outputStream.writeObject(new RequestUserCreditCommand((Credit) creditsComboBox.getSelectedItem(), CurrentUserUtil.getCurrentUser(),
                (Double) requestedAmountSpinner.getValue()));
            
            ObjectInputStream inputStream = new ObjectInputStream(socket.getInputStream());
            RequestUserCreditResult result = (RequestUserCreditResult) inputStream.readObject();
            
            if (result.isSuccess()) {
                JOptionPane.showMessageDialog(this, "Заявка на кредит успешно оформлена.");
            } else {
                JOptionPane.showMessageDialog(this, "Не удалось оформить заявку на кредит.");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_requestCreditButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Credit> creditsComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton requestCreditButton;
    private javax.swing.JSpinner requestedAmountSpinner;
    // End of variables declaration//GEN-END:variables

}
